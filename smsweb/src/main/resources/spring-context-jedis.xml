<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-lazy-init="true">

	<description>Jedis Configuration</description>

    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:system.properties" />
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="300" /> <!-- 最大能够保持idel状态的对象数  -->
		<property name="maxTotal" value="60000" /> <!-- 最大分配的对象数 -->
		<property name="testOnBorrow" value="true" /> <!-- 当调用borrow Object方法时，是否进行有效性检查 -->
	</bean>

	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">

		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${redis.host}" />
		<constructor-arg index="2" value="${redis.port}" type="int" />
	</bean>
	<!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
		<!--&lt;!&ndash; 最大连接数 &ndash;&gt;-->
		<!--<property name="maxTotal" value="30" />-->
		<!--&lt;!&ndash; 最大空闲连接数 &ndash;&gt;-->
		<!--<property name="maxIdle" value="10" />-->
		<!--&lt;!&ndash; 每次释放连接的最大数目 &ndash;&gt;-->
		<!--<property name="numTestsPerEvictionRun" value="1024" />-->
		<!--&lt;!&ndash; 释放连接的扫描间隔（毫秒） &ndash;&gt;-->
		<!--<property name="timeBetweenEvictionRunsMillis" value="30000" />-->
		<!--&lt;!&ndash; 连接最小空闲时间 &ndash;&gt;-->
		<!--<property name="minEvictableIdleTimeMillis" value="1800000" />-->
		<!--&lt;!&ndash; 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 &ndash;&gt;-->
		<!--<property name="softMinEvictableIdleTimeMillis" value="10000" />-->
		<!--&lt;!&ndash; 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 &ndash;&gt;-->
		<!--<property name="maxWaitMillis" value="1500" />-->
		<!--&lt;!&ndash; 在获取连接的时候检查有效性, 默认false &ndash;&gt;-->
		<!--<property name="testOnBorrow" value="true" />-->
		<!--&lt;!&ndash; 在空闲时检查有效性, 默认false &ndash;&gt;-->
		<!--<property name="testWhileIdle" value="true" />-->
		<!--&lt;!&ndash; 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true &ndash;&gt;-->
		<!--<property name="blockWhenExhausted" value="false" />-->
	<!--</bean>-->


	<!--&lt;!&ndash; 集群版 &ndash;&gt;-->
	<!--<bean id="redisClient" class="redis.clients.jedis.JedisCluster">-->
		<!--<constructor-arg name="nodes">-->
			<!--<set>-->
				<!--<bean class="redis.clients.jedis.HostAndPort">-->
					<!--<constructor-arg name="host" value="101.37.117.13"></constructor-arg>-->
					<!--<constructor-arg name="port" value="7000"></constructor-arg>-->
				<!--</bean>-->
				<!--<bean class="redis.clients.jedis.HostAndPort">-->
					<!--<constructor-arg name="host" value="101.37.117.13"></constructor-arg>-->
					<!--<constructor-arg name="port" value="7001"></constructor-arg>-->
				<!--</bean>-->
				<!--<bean class="redis.clients.jedis.HostAndPort">-->
					<!--<constructor-arg name="host" value="101.37.117.13"></constructor-arg>-->
					<!--<constructor-arg name="port" value="7002"></constructor-arg>-->
				<!--</bean>-->
				<!--<bean class="redis.clients.jedis.HostAndPort">-->
					<!--<constructor-arg name="host" value="101.37.117.13"></constructor-arg>-->
					<!--<constructor-arg name="port" value="7003"></constructor-arg>-->
				<!--</bean>-->
				<!--<bean class="redis.clients.jedis.HostAndPort">-->
					<!--<constructor-arg name="host" value="101.37.117.13"></constructor-arg>-->
					<!--<constructor-arg name="port" value="7004"></constructor-arg>-->
				<!--</bean>-->
				<!--<bean class="redis.clients.jedis.HostAndPort">-->
					<!--<constructor-arg name="host" value="101.37.117.13"></constructor-arg>-->
					<!--<constructor-arg name="port" value="7005"></constructor-arg>-->
				<!--</bean>-->
			<!--</set>-->
		<!--</constructor-arg>-->
		<!--<constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>-->
	<!--</bean>-->

</beans>